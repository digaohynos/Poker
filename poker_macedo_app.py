import streamlit as st

# --- Configura√ß√µes Iniciais do App ---
st.set_page_config(
    page_title="Poker Macedo",
    layout="centered" # "centered" ou "wide"
)

st.title("üèÜ Poker Macedo üèÜ")
st.markdown("Gerencie a pontua√ß√£o do seu torneio de poker!")

# --- Inicializa√ß√£o dos Participantes (usando st.session_state para persistir dados) ---
# st.session_state √© como um dicion√°rio que armazena dados entre as intera√ß√µes do usu√°rio.
if 'participants' not in st.session_state:
    st.session_state.participants = [
        {"name": "Rodrigo", "score": 0},
        {"name": "Gui", "score": 0},
        {"name": "Raquel", "score": 0},
        {"name": "Nilsa", "score": 0},
        {"name": "Cleber", "score": 0},
        {"name": "Leandro", "score": 0},
    ]

# --- Fun√ß√£o para Ordenar e Exibir a Classifica√ß√£o ---
def display_leaderboard():
    st.subheader("Classifica√ß√£o Atual")
    
    # Ordena os participantes pela pontua√ß√£o em ordem decrescente
    sorted_participants = sorted(st.session_state.participants, key=lambda x: x['score'], reverse=True)
    
    # Exibe a classifica√ß√£o
    if sorted_participants:
        for i, participant in enumerate(sorted_participants):
            st.write(f"**{i+1}. {participant['name']}**: {participant['score']} pontos")
    else:
        st.write("Nenhum participante cadastrado ainda.")

# --- Se√ß√£o de Adi√ß√£o de Pontua√ß√£o ---
st.subheader("‚ûï Registrar Pontua√ß√£o da Partida")

# Usamos um formul√°rio para agrupar as entradas de pontua√ß√£o e o bot√£o de submiss√£o.
# Isso evita que o app seja recarregado a cada n√∫mero digitado.
with st.form(key='add_score_form'):
    st.markdown("Insira os pontos que cada jogador ganhou nesta partida:")
    
    new_scores_input = {} # Dicion√°rio tempor√°rio para guardar os pontos digitados nesta submiss√£o
    
    # Cria uma entrada de n√∫mero para cada participante
    # O truque 'key=f"score_input_{p['name']}"' √© crucial para que cada widget seja √∫nico.
    for participant in st.session_state.participants:
        new_scores_input[participant['name']] = st.number_input(
            f"Pontos para {participant['name']}",
            min_value=0,      # Pontua√ß√£o m√≠nima √© 0
            value=0,          # Valor inicial √© 0
            step=1,           # Incrementa de 1 em 1
            key=f"score_input_{participant['name']}", # Chave √∫nica para o widget
            label_visibility="collapsed" # Esconde o label padr√£o, pois j√° temos o texto acima
        )
            
    submit_button = st.form_submit_button(label='Adicionar Pontos da Partida')

    if submit_button:
        # Itera sobre os participantes e atualiza suas pontua√ß√µes no st.session_state
        for i, participant in enumerate(st.session_state.participants):
            name = participant['name']
            score_to_add = new_scores_input[name]
            
            if score_to_add > 0:
                st.session_state.participants[i]['score'] += score_to_add
        
        st.success("Pontua√ß√µes adicionadas com sucesso!")
        # For√ßa o app a recarregar para exibir a nova classifica√ß√£o
        st.rerun()

# --- Exibir a Classifica√ß√£o no final ---
# Isso garante que a classifica√ß√£o seja sempre a √∫ltima coisa mostrada e atualizada.
display_leaderboard()

# --- Rodap√© (Opcional) ---
st.markdown("---")
st.info("Desenvolvido para o torneio Poker Macedo.")